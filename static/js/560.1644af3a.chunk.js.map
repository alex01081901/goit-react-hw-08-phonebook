{"version":3,"file":"static/js/560.1644af3a.chunk.js","mappings":"gWAYO,SAASA,IACd,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAyB7B,OACE,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACC,EAAA,EAAD,CAAQL,GAAI,CAAEM,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAnC,wBAGA,UAACZ,EAAA,EAAD,CAAKW,UAAU,OAAOE,YAAU,EAACC,SAtChB,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAAoBpB,EAASqB,MAAMC,MACvC,SAAAC,GAAO,OACLA,EAAQC,KAAKC,gBACbP,EAAEQ,OAAOC,SAASH,KAAKI,MAAMH,aAFxB,IAKT,GAAIL,EACF,OAAOS,MAAM,GAAD,OAAIT,EAAkBI,KAAtB,4BAGd,IAAMM,EAAa,CACjBN,KAAMN,EAAEQ,OAAOC,SAASH,KAAKI,MAC7BG,OAAQb,EAAEQ,OAAOC,SAASI,OAAOH,OAGnC9B,GAASkC,EAAAA,EAAAA,IAAWF,IAEpBZ,EAAEQ,OAAOO,OACV,EAiB4D7B,GAAI,CAAE8B,GAAI,GAAnE,WACE,UAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACE,SAACF,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACE,SAACC,EAAA,EAAD,CACEC,aAAa,aACbjB,KAAK,OACLkB,UAAQ,EACRC,WAAS,EACTC,KAAK,OACLC,GAAG,OACHC,MAAM,OACNC,WAAS,EACTC,QAAQ,yHACRC,MAAM,8IAGV,SAACd,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACE,SAACC,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTC,KAAK,MACLC,GAAG,SACHC,MAAM,eACNtB,KAAK,SACLwB,QAAQ,yFACRC,MAAM,uGAIZ,SAACC,EAAA,EAAD,CACEN,KAAK,SACLD,WAAS,EACT5B,QAAQ,YACRoC,SAAUnD,EAASoD,SACnBC,QAASrD,EAASoD,SAClBhD,GAAI,CAAE8B,GAAI,EAAGoB,GAAI,GANnB,8BAaP,C,2CC7EYC,EAAc,WACzB,IAAMvD,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAEvBsD,EAXmB,SAACxD,EAAUyD,GACpC,IAAMC,EAAmBD,EAAOhC,cAEhC,OAAOzB,EAASqB,MAAMoC,QAAO,SAAAlC,GAAO,OAClCA,EAAQC,KAAKC,cAAckC,SAASD,EADF,GAGrC,CAKyBE,CAAmB5D,GAD5BC,EAAAA,EAAAA,IAAY4D,EAAAA,KAG3B,OACE,+BACE,UAACC,EAAA,EAAD,CAAM1D,GAAI,CAAE2D,MAAO,OAAQpD,QAAS,oBAApC,UACGX,EAASgE,YACR,iCACE,UAAC7D,EAAA,EAAD,CACEC,GAAI,CACFE,QAAS,OACT2D,QAAS,OACTC,UAAW,QAJf,WAOE,SAACC,EAAA,EAAD,CACEC,UAAU,OACVrD,QAAQ,WACRgD,MAAO,GACPM,OAAQ,MAEV,UAAClE,EAAA,EAAD,CAAK4D,MAAM,MAAX,WACE,SAACI,EAAA,EAAD,CACEC,UAAU,OACVC,OAAQ,GACRN,MAAM,MACNO,MAAO,CAAEC,aAAc,OAEzB,SAACJ,EAAA,EAAD,CAAUC,UAAU,OAAOC,OAAQ,GAAIN,MAAM,eAGjD,UAAC5D,EAAA,EAAD,CACEC,GAAI,CACFE,QAAS,OACT2D,QAAS,OACTC,UAAW,QAJf,WAOE,SAACC,EAAA,EAAD,CACEC,UAAU,OACVrD,QAAQ,WACRgD,MAAO,GACPM,OAAQ,MAEV,UAAClE,EAAA,EAAD,CAAK4D,MAAM,MAAX,WACE,SAACI,EAAA,EAAD,CACEC,UAAU,OACVC,OAAQ,GACRN,MAAM,MACNO,MAAO,CAAEC,aAAc,OAEzB,SAACJ,EAAA,EAAD,CAAUC,UAAU,OAAOC,OAAQ,GAAIN,MAAM,eAGjD,UAAC5D,EAAA,EAAD,CACEC,GAAI,CACFE,QAAS,OACT2D,QAAS,OACTC,UAAW,QAJf,WAOE,SAACC,EAAA,EAAD,CACEC,UAAU,OACVrD,QAAQ,WACRgD,MAAO,GACPM,OAAQ,MAEV,UAAClE,EAAA,EAAD,CAAK4D,MAAM,MAAX,WACE,SAACI,EAAA,EAAD,CACEC,UAAU,OACVC,OAAQ,GACRN,MAAM,MACNO,MAAO,CAAEC,aAAc,OAEzB,SAACJ,EAAA,EAAD,CAAUC,UAAU,OAAOC,OAAQ,GAAIN,MAAM,iBAKpD/D,EAASwE,QACR,mEAA2CxE,EAASwE,SAErDhB,EAAgBiB,KAAI,SAAAlD,GAAO,OAC1B,UAAC,WAAD,YACE,SAACmD,EAAA,GAAD,CAAUlE,WAAW,aAArB,UACE,SAACmE,EAAD,CAAiBpD,QAASA,OAE5B,SAACqD,EAAA,EAAD,CAAS7D,QAAQ,QAAQD,UAAU,SAJhBS,EAAQsB,GADH,QAWnC,E,6BClHD,SAASgC,EAAcC,GACrB,IACIC,EADAC,EAAO,EAIX,IAAKD,EAAI,EAAGA,EAAID,EAAOG,OAAQF,GAAK,EAClCC,EAAOF,EAAOI,WAAWH,KAAOC,GAAQ,GAAKA,GAG/C,IAAIG,EAAQ,IAEZ,IAAKJ,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAEzBI,GAAS,aADMH,GAAa,EAAJD,EAAU,KACdK,SAAS,KAAMC,OAAO,EAC3C,CAGD,OAAOF,CACR,CCJM,IAAMR,EAAkB,SAAC,GAAiB,IDMpBnD,ECNKD,EAAc,EAAdA,QAC1BzB,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAM7B,OACE,iCACE,SAACoF,EAAA,EAAD,WACE,SAAC7E,EAAA,GAAD,WDLqBe,ECKID,EAAQC,KDJhC,CACLpB,GAAI,CACFO,QAASkE,EAAcrD,IAEzB+D,SAAS,GAAD,OAAK/D,EAAKgE,MAAM,KAAK,GAAG,WCE9B,SAACC,EAAA,EAAD,CACEC,QAASnE,EAAQC,KACjBmE,WACE,SAAC,WAAD,WACE,SAAC9E,EAAA,EAAD,CACET,GAAI,CAAEE,QAAS,UACfQ,UAAU,OACVC,QAAQ,QACRoE,MAAM,eAJR,SAMG5D,EAAQQ,cAMjB,SAACmB,EAAA,EAAD,CACEN,KAAK,SACLgD,KAAK,QACL7E,QAAQ,WACRoE,MAAM,QACNU,WAAW,SAACC,EAAA,EAAD,IACXC,QA/Be,WACnBjG,GAASkG,EAAAA,EAAAA,IAAczE,EAAQsB,IAChC,EA8BKM,SAAUnD,EAASiG,WACnB5C,QAASrD,EAASiG,WAClBC,gBAAgB,QATlB,sBAeL,E,oBC/CYC,EAAS,WACpB,IAAMrG,GAAWC,EAAAA,EAAAA,MAMjB,OACE,UAACI,EAAA,EAAD,CACEC,GAAI,CACF2D,MAAO,OACPqC,SAAU,QACV/F,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UAPhB,WAUE,SAACC,EAAA,EAAD,CAAQL,GAAI,CAAEM,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAAC0F,EAAA,EAAD,OAEF,SAACxF,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAnC,uBAIA,SAACoB,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAGjC,GAAI,CAAE8B,GAAI,GAAtC,UACE,SAACC,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACE,SAACC,EAAA,EAAD,CACEhB,KAAK,SACLmB,WAAS,EACTC,KAAK,OACLC,GAAG,SACHC,MAAM,wBACNwD,SA9BW,SAAApF,GACnBpB,GAASyG,EAAAA,EAAAA,GAAUrF,EAAEQ,OAAOE,OAC7B,SAgCG,SAAC2B,EAAD,MAGL,E,mBCtCD,SAASiD,EAAUC,GACjB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAAC9F,EAAA,GAAD,gBACEE,QAAQ,QACRoE,MAAM,iBACNyB,MAAM,UACFH,GAJN,cAMG,mBACD,SAACI,EAAA,EAAD,CAAM1B,MAAM,UAAU2B,KAAK,GAAGf,QAAS,kBAAMW,EAAS,IAAf,EAAvC,6BAEQ,KACP,IAAIK,MAAOC,cACX,OAGN,CAED,IAAMC,GAAeC,EAAAA,EAAAA,KA8BrB,EA5BiB,WACf,IAAMpH,GAAWC,EAAAA,EAAAA,MAMjB,OAJAoH,EAAAA,EAAAA,YAAU,WACRrH,GAASsH,EAAAA,EAAAA,MACV,GAAE,CAACtH,KAGF,SAACuH,EAAA,EAAD,CAAeC,MAAOL,EAAtB,UACE,UAACM,EAAA,EAAD,CACEzG,UAAU,OACVV,GAAI,CACFE,QAAS,OACTC,cAAe,MACfiH,SAAU,OACVC,eAAgB,SAChBvD,UAAW,QAPf,WAUE,SAACwD,EAAA,GAAD,KACA,SAAC7H,EAAD,KACA,SAACsG,EAAD,KACA,SAACK,EAAD,CAAWpG,GAAI,CAAE8B,GAAI,SAI5B,C","sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","utils/coloredAvatar.js","components/ContactListItem/ContactListItem.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\nimport Typography from '@mui/material/Typography';\nimport { addContact } from 'redux/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/selectors';\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const duplicatedContact = contacts.items.find(\n      contact =>\n        contact.name.toLowerCase() ===\n        e.target.elements.name.value.toLowerCase()\n    );\n\n    if (duplicatedContact) {\n      return alert(`${duplicatedContact.name} is already in contacts`);\n    }\n\n    const newContact = {\n      name: e.target.elements.name.value,\n      number: e.target.elements.number.value,\n    };\n\n    dispatch(addContact(newContact));\n\n    e.target.reset();\n  };\n\n  return (\n    <Box\n      sx={{\n        marginTop: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n        <AddIcCallIcon />\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Phonebook\n      </Typography>\n      <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              autoComplete=\"given-name\"\n              name=\"name\"\n              required\n              fullWidth\n              type=\"text\"\n              id=\"name\"\n              label=\"Name\"\n              autoFocus\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              required\n              fullWidth\n              type=\"tel\"\n              id=\"number\"\n              label=\"Phone number\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            />\n          </Grid>\n        </Grid>\n        <LoadingButton\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          disabled={contacts.isAdding}\n          loading={contacts.isAdding}\n          sx={{ mt: 3, mb: 2 }}\n        >\n          Add contact\n        </LoadingButton>\n      </Box>\n    </Box>\n  );\n}","import * as React from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport Skeleton from '@mui/material/Skeleton';\nimport Box from '@mui/material/Box';\n\nimport { ContactListItem } from 'components';\nimport { useSelector } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/selectors';\n\nconst getVisibleContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const visibleContacts = getVisibleContacts(contacts, filter);\n\n  return (\n    <>\n      <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\n        {contacts.isLoading && (\n          <>\n            <Box\n              sx={{\n                display: 'flex',\n                padding: '20px',\n                columnGap: '20px',\n              }}\n            >\n              <Skeleton\n                animation=\"wave\"\n                variant=\"circular\"\n                width={40}\n                height={40}\n              />\n              <Box width=\"80%\">\n                <Skeleton\n                  animation=\"wave\"\n                  height={10}\n                  width=\"80%\"\n                  style={{ marginBottom: 10 }}\n                />\n                <Skeleton animation=\"wave\" height={10} width=\"40%\" />\n              </Box>\n            </Box>\n            <Box\n              sx={{\n                display: 'flex',\n                padding: '20px',\n                columnGap: '20px',\n              }}\n            >\n              <Skeleton\n                animation=\"wave\"\n                variant=\"circular\"\n                width={40}\n                height={40}\n              />\n              <Box width=\"80%\">\n                <Skeleton\n                  animation=\"wave\"\n                  height={10}\n                  width=\"80%\"\n                  style={{ marginBottom: 10 }}\n                />\n                <Skeleton animation=\"wave\" height={10} width=\"40%\" />\n              </Box>\n            </Box>\n            <Box\n              sx={{\n                display: 'flex',\n                padding: '20px',\n                columnGap: '20px',\n              }}\n            >\n              <Skeleton\n                animation=\"wave\"\n                variant=\"circular\"\n                width={40}\n                height={40}\n              />\n              <Box width=\"80%\">\n                <Skeleton\n                  animation=\"wave\"\n                  height={10}\n                  width=\"80%\"\n                  style={{ marginBottom: 10 }}\n                />\n                <Skeleton animation=\"wave\" height={10} width=\"40%\" />\n              </Box>\n            </Box>\n          </>\n        )}\n        {contacts.error && (\n          <div>Something went wrong. Error message: {contacts.error}</div>\n        )}\n        {visibleContacts.map(contact => (\n          <React.Fragment key={contact.id}>\n            <ListItem alignItems=\"flex-start\">\n              <ContactListItem contact={contact} />\n            </ListItem>\n            <Divider variant=\"inset\" component=\"li\" />\n          </React.Fragment>\n        ))}\n      </List>\n    </>\n  );\n};","function stringToColor(string) {\n  let hash = 0;\n  let i;\n\n  /* eslint-disable no-bitwise */\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.slice(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n  return color;\n}\n\nexport function stringAvatar(name) {\n  return {\n    sx: {\n      bgcolor: stringToColor(name),\n    },\n    children: `${name.split(' ')[0][0]}`,\n  };\n}","import * as React from 'react';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { getContacts } from 'redux/selectors';\nimport { stringAvatar } from 'utils/coloredAvatar';\n\nexport const ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  return (\n    <>\n      <ListItemAvatar>\n        <Avatar {...stringAvatar(contact.name)} />\n      </ListItemAvatar>\n      <ListItemText\n        primary={contact.name}\n        secondary={\n          <React.Fragment>\n            <Typography\n              sx={{ display: 'inline' }}\n              component=\"span\"\n              variant=\"body2\"\n              color=\"text.primary\"\n            >\n              {contact.number}\n            </Typography>\n          </React.Fragment>\n        }\n      />\n\n      <LoadingButton\n        type=\"button\"\n        size=\"small\"\n        variant=\"outlined\"\n        color=\"error\"\n        startIcon={<DeleteIcon />}\n        onClick={handleDelete}\n        disabled={contacts.isDeleting}\n        loading={contacts.isDeleting}\n        loadingPosition=\"start\"\n      >\n        Delete\n      </LoadingButton>\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n};","import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\nimport Typography from '@mui/material/Typography';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { ContactList } from 'components';\nimport { Avatar } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <Box\n      sx={{\n        width: '100%',\n        maxWidth: '400px',\n        marginTop: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n        <ContactPhoneIcon />\n      </Avatar>\n      <Typography component=\"h2\" variant=\"h5\">\n        Contacts\n      </Typography>\n\n      <Grid container spacing={2} sx={{ mt: 1 }}>\n        <Grid item xs={12}>\n          <TextField\n            name=\"search\"\n            fullWidth\n            type=\"text\"\n            id=\"search\"\n            label=\"Find contacts by name\"\n            onChange={handleChange}\n          />\n        </Grid>\n      </Grid>\n      <ContactList />\n    </Box>\n  );\n};","import * as React from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport { ContactForm, Filter } from 'components';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from '@mui/material';\n\nfunction Copyright(props) {\n  const navigate = useNavigate();\n\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"\" onClick={() => navigate('/')}>\n        ContactsManager\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst defaultTheme = createTheme();\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Container\n        component=\"main\"\n        sx={{\n          display: 'flex',\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n          columnGap: '20px',\n        }}\n      >\n        <CssBaseline />\n        <ContactForm />\n        <Filter />\n        <Copyright sx={{ mt: 5 }} />\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default Contacts;"],"names":["ContactForm","dispatch","useDispatch","contacts","useSelector","getContacts","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","AddIcCall","Typography","component","variant","noValidate","onSubmit","e","preventDefault","duplicatedContact","items","find","contact","name","toLowerCase","target","elements","value","alert","newContact","number","addContact","reset","mt","Grid","container","spacing","item","xs","TextField","autoComplete","required","fullWidth","type","id","label","autoFocus","pattern","title","LoadingButton","disabled","isAdding","loading","mb","ContactList","visibleContacts","filter","normalizedFilter","includes","getVisibleContacts","getFilter","List","width","isLoading","padding","columnGap","Skeleton","animation","height","style","marginBottom","error","map","ListItem","ContactListItem","Divider","stringToColor","string","i","hash","length","charCodeAt","color","toString","slice","ListItemAvatar","children","split","ListItemText","primary","secondary","size","startIcon","Delete","onClick","deleteContact","isDeleting","loadingPosition","Filter","maxWidth","ContactPhone","onChange","setFilter","Copyright","props","navigate","useNavigate","align","Link","href","Date","getFullYear","defaultTheme","createTheme","useEffect","fetchContacts","ThemeProvider","theme","Container","flexWrap","justifyContent","CssBaseline"],"sourceRoot":""}